Чтобы собрать проект нужно сделать make all
В результате получится объектный файл solution
Пример запуска: ./solution 10
В результате выведется вся гильдия в порядке возрастания по золоту спустя 10 лет

Чтобы понять как читать код:
Все начинается в src/main.cpp,там создается обьект класса Guild,в котором хранятся обьекты класса Merchant. В Guild осуществляется вся торговля.
От класса Merchant наследуются классы в которых реализованны стратегии:
	Altruist = альтруист
	Rogue = кидала
	Fox = хитрец
	Unpredictable = непредсказуемый
	Spiteful = злопамятный
	Quirky = ушлый
В заголовочных файлах Merchant.h и Guild.h есть комментарии.Их реализация лежит в src.

Мне не очень понятно,что подразумевается под наиболее выгодной стратегией.Я сделал как понял,то есть наибольшее количество золота,заработанного за все время. При этом мы удаляем худших членов гильдии на основе прибыли за последний год,и когда добавляем новых - у них нет золота,то есть они вряд ли догонят лидеров.Меня это смущает.Если же считать по наибольшей прибыли за год,то непонятно в чем заключается долгосрочность.В общем,непонятно,что означает "выгодность".

Насчет стратегий: мне непонятно, обнуляется ли стратегия со следующим торговцем. Допустим, злопамятный: держит ли он зло на всех торговцев,после того как его обманули или только конкретно с тем,кто его обманул?Или ушлый:он сотрудничает,жульничает,сотрудничает,сотрудничает,и в зависимости от того,обманули ли его, меняет свою стратегию. Меняет ли он навсегда свою стратегию или только с конкретным торговцем?Я сделал так,что они действует по стратегии с начала с каждым новым торговцем.

Результат меняется с каждым запуском,так как влияет случайное количество сделок(5-10) и есть вероятность ошибиться,но я запустил программу на 10,15,20 годах по несколько раз и в среднем получил,что самыми лучшими(то есть самый богатый в гильдии спустя годы) стратегиями являются Альтруист,Злопамятный,Хитрец. Причем в порядке частоты :
	Злопамятный(часто) > Альтруист(иногда) > Хитрец(очень редко).

Дополнительное задание не реализовал из-за неопределенностей.
